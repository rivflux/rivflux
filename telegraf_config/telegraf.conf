[agent]
  interval = "5m"
  omit_hostname = true
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "$INFLUX_TOKEN"
  organization = "rivflux"
  bucket = "telegraf"
[[inputs.http]]
  name_override = "openevse"
  urls = ["${OPENEVSE_URL}"]
  data_format = "json"
  json_query = "{srssi,free_heap,comm_sent,comm_success,amp,voltage,pilot,temp1,state,elapsed,wattsec,watthour,gfcicount,nogndcount,stuckcount}"
[[inputs.exec]]
  name_override = "rivian"
  ## Commands array
  commands = [
    "python3 rivian-python-api/src/rivian_python_api/rivian_cli.py  --vehicle_id ${RIVIAN_VEHICLE_ID}",
  ]
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "csv"
  ## Indicates how many rows to treat as a header. By default, the parser assumes
  ## there is no header and will parse the first row as data. If set to anything more
  ## than 1, column names will be concatenated with the name listed in the next header row.
  ## If `csv_column_names` is specified, the column names in header will be overridden.
  csv_header_row_count = 1

  ## For assigning explicit data types to columns.
  ## Supported types: "int", "float", "bool", "string".
  ## Specify types in order by column (e.g. `["string", "int", "float"]`)
  ## If this is not specified, type conversion will be done on the types above.
  csv_column_types = ["string", "float", "string", "string", "string", "float", "float", "float", "float", "float", "string", "string", "float", "float", "float", "float", "float"]

  ## The character reserved for marking a row as a comment row
  ## Commented rows are skipped and not parsed
  csv_comment = "#"

  ## Columns listed here will be added as tags. Any other columns
  ## will be added as fields.
  #csv_tag_columns = ["Power", "Drive Mode", "Gear", "Charger Status", "Charge State"]

  ## The column to extract time information for the metric
  ## `csv_timestamp_format` must be specified if this is used.
  ## Will not be included as field in metric.
  csv_timestamp_column = "timestamp"

  ## The format of time data extracted from `csv_timestamp_column`
  ## this must be specified if `csv_timestamp_column` is specified
  csv_timestamp_format = "RFC3339"

  ## Indicates values to skip, such as an empty string value "".
  ## The field will be skipped entirely where it matches any values inserted here.
  csv_skip_values = []

  ## If set to true, the parser will skip csv lines that cannot be parsed.
  ## By default, this is false
  csv_skip_errors = false
